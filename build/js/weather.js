var m=(c,t,e)=>new Promise((n,r)=>{var s=a=>{try{i(e.next(a))}catch(o){r(o)}},h=a=>{try{i(e.throw(a))}catch(o){r(o)}},i=a=>a.done?n(a.value):Promise.resolve(a.value).then(s,h);i((e=e.apply(c,t)).next())});import{getDayOfTheWeek as d,renderListWithTemplate as l}from"./utils.js";export default class u{constructor(t,e){this.listElement=t,this.forecastData=e}init(t){return m(this,null,function*(){this.getWeather(t)})}getWeather(t){return m(this,null,function*(){let e=yield this.forecastData.fetchWeatherData(t,"weather");e.dt_txt=new Date,e.dayName=d(e);let n=new Date().getMonth()+1;const r=new Date().getDate();e.date="Today - "+e.dayName+", "+n+"/"+r,e.imageName=e.name.replace(/[^\w\s]/gi,"").split(" ").join(""),this.renderWeather(e)})}prepareCardTemplate(t,e){return t.querySelector("#weatherIcon").src="http://openweathermap.org/img/wn/"+e.weather[0].icon+"@2x.png",t.querySelector(".city-name").textContent=e.name,t.querySelector(".hero-card-main").style.backgroundImage=`url(images/${e.imageName}.jpg)`||"url(images/noImage.jpg)",t.querySelector(".date").textContent=e.date,t.querySelector(".weather").textContent=e.weather[0].main,t.querySelector(".min-max").textContent=Math.round(e.main.temp_min)+"\xB0 / "+Math.round(e.main.temp_max)+" \xB0",t.querySelector(".temperature").textContent=Math.round(e.main.temp)+" \xB0F",t}renderWeather(t){this.listElement.innerHTML="";const e=document.getElementById("main-card-container");l(e,this.listElement,[t],this.prepareCardTemplate)}}
